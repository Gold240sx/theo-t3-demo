import { SignIn, SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import Image from "next/image";
import React, { useState, useEffect } from "react";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";

import { api } from "~/utils/api";
import { RouterOutputs } from "~/utils/api";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
dayjs.extend(relativeTime);

const CreatePostWizard = () => {
    //user Info
    const { user } = useUser();
    if (!user) return null;

    return (
        <div className="flex w-full justify-center gap-2 dark:placeholder:text-white">
            <Image
                src={user.profileImageUrl}
                alt={` ${user.username} profile picture `}
                className="flex rounded-full"
                width={56}
                height={56}
            />
            <input
                placeholder="Type some stuff"
                className="grow bg-transparent px-4 outline-none focus:placeholder:opacity-5"
            />
        </div>
    );
};
type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
    const { post, author } = props;

    return (
        <div key={post.id} className="flex gap-3 border-b border-zinc-600 p-4">
            <Image
                src={author.profilePicture}
                alt={` ${author.username} comment profile picture `}
                className=" rounded-full"
                width={56}
                height={56}
            />
            <div className="flex flex-col">
                <p className="capitalize text-zinc-400">
                    <span className=" mr-1 text-teal-400">@</span>
                    {`${author.username!}`}{" "}
                    <span className="mr-1 text-zinc-700">|</span>
                    <span className="text-sm text-amber-500">
                        {`${dayjs(post.createdAt).fromNow()}`}
                    </span>
                </p>
                <span className="capitalize text-zinc-200">{post.content}</span>
            </div>
        </div>
    );
};

const Home: NextPage = (props) => {
    const user = useUser();

    console.log(user);

    const { data, isLoading } = api.posts.getAll.useQuery();

    if (isLoading) return <div>Loading...</div>;
    if (!data) return <div>....Something went wrong.</div>;

    return (
        <>
            <Head>
                <title>Create T3 App</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className="flex h-screen justify-center">
                <div className="w-full border-x border-zinc-200 bg-zinc-200 dark:bg-zinc-900 md:max-w-2xl">
                    <div className="border-b border-zinc-500 p-4">
                        {/* Sign In / Out Buttons */}

                        {!user.isSignedIn && (
                            <div className=" flex justify-center text-center">
                                <SignInButton />
                            </div>
                        )}

                        {user.isSignedIn && <CreatePostWizard />}
                    </div>

                    <SignIn
                        path="/sign-in"
                        routing="path"
                        signUpUrl="/sign-up"
                    />

                    <div className="flex flex-col">
                        {[...data, ...data]?.map((fullPost) => (
                            <PostView {...fullPost} key={fullPost.post.id} />
                        ))}
                    </div>
                </div>
            </main>
        </>
    );
};

export default Home;
